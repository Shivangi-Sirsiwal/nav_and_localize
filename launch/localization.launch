    <launch>
        <!-- Argument definitions -->
        <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="Turtlebot3 model type [burger, waffle, waffle_pi]" />
        <arg name="x_pos" default="0.0" />
        <arg name="y_pos" default="0.0" />
        <arg name="z_pos" default="0.0" />

        <!-- Start the static map server -->
        <node type="map_server" name="map_server" pkg="map_server" args="$(find lab3)/maps/map.yaml" />

        <!-- Turtlebot3  -->
        <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch" />

        <!-- Load the robot description -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

        <!-- Launch RViz with a custom configuration -->
        <node pkg="rviz" type="rviz" name="rviz" required="true"
                args="-d $(find lab3)/rviz/watch_the_robot_move.rviz" />

        <!-- Path planner script -->
        <node pkg="lab3" type="path_planner.py" name="path_planner" output="screen" />

        <!-- Path client script (publishes odometry and TFs) -->
        <node pkg="lab3" type="path_client.py" name="path_client" output="screen" />
        
        <!-- CSpace calculator script -->
        <node pkg="lab3" type="cspace_calc.py" name="cspace_calc" output="screen" />

        <!-- Launch AMCL-->
        <node pkg="amcl" type="amcl" name="amcl" output="screen">
            <!-- Publish scans from best pose at a max of 10 Hz -->
            <param name="initial_pose_x" value="random"/>
            <param name="initial_pose_y" value="random"/>
            <param name="initial_pose_a" value="random"/>
            <param name="odom_model_type" value="diff-corrected"/>
            <param name="odom_alpha5" value="0.1"/>
            <param name="gui_publish_rate" value="10.0"/>
            <param name="laser_max_beams" value="180"/>
            <param name="min_particles" value="100"/>
            <param name="max_particles" value="3000"/>
            <param name="kld_err" value="0.005"/>
            <param name="kld_z" value="0.995"/>
            <param name="odom_alpha1" value="0.1"/>
            <param name="odom_alpha2" value="0.1"/>
            <!-- translation std dev, m -->
            <param name="odom_alpha3" value="0.1"/>
            <param name="odom_alpha4" value="0.1"/>
            <param name="laser_z_hit" value="0.5"/>
            <param name="laser_z_short" value="0.05"/>
            <param name="laser_z_max" value="0.05"/>
            <param name="laser_z_rand" value="1.0"/>
            <param name="laser_sigma_hit" value="0.2"/>
            <param name="laser_lambda_short" value="0.1"/>
            <param name="laser_model_type" value="beam"/>
            <!-- <param name="laser_model_type" value="beam"/> -->
            <param name="laser_likelihood_max_dist" value="2.0"/>
            <param name="update_min_d" value="0.02"/>
            <param name="update_min_a" value="0.02"/>
            <param name="odom_frame_id" value="odom"/>
            <param name="resample_interval" value="1"/>
            <param name="transform_tolerance" value="0.2"/>
            <param name="recovery_alpha_slow" value="0.0"/>
            <param name="recovery_alpha_fast" value="0.0"/>
            <remap from="scan" to="/scan"/>
        </node>

        <!-- Global localization -->
        <node pkg="rosservice" type="rosservice" name="global_loc" args="call --wait /global_localization" />

        <!-- Localization script -->
        <node pkg="lab3" type="localization.py" name="localization" output="screen" />

    </launch>